server_uri: bolt://151.106.35.64:7687
admin_user: neo4j
admin_pass: l5IKrx07DGYdclK

mod: async
thread_count: 4

files:
  - url: /home/cuneyttyler/knowledgebase/dbpedia/infobox-properties_lang=en.ttl.bz2
    type: ttl
    compression: bz2
    chunk_size: 100
    skip_chunks: 0
    cql: |
        WITH $dict.rows AS rows UNWIND rows as row
           MATCH(subject:Entity) where subject.dbpedia_uri = row.subject
           WITH *, 'number' as numberStr, 'time' as timeStr, 'string' as stringStr, 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type' as typeUriStr, 'Type' as typeNameStr
              WITH *,  row.object as object_  WHERE 'http://dbpedia.org' IN object_ 
                  MATCH(object:Entity) where object.dbpedia_uri = row.object
                   WITH * CALL apoc.merge.relationship(subject,row.predicate,
                   {name: apoc.text.capitalize(replace(row.predicate,"http://dbpedia.org/property/","")),source: "dbpedia", type: "uri"}, 
                   {name: apoc.text.capitalize(replace(row.predicate,"http://dbpedia.org/property/","")),source: "dbpedia", type: "uri"},
                   object,
                   {name: apoc.text.capitalize(replace(row.predicate,"http://dbpedia.org/property/","")),source: "dbpedia", type: "uri"}) YIELD rel RETURN null
               WITH *,  row.object as object_ WHERE NOT 'http://dbpedia.org' IN object_
                   MATCH(mp:MetaProperty) where mp.uri = row.predicate
                    WITH *,  row.type as type_
                     WHERE type_ is not null and type_ = "http://www.w3.org/2001/XMLSchema#integer"
                        CREATE(object:Property {value: row.object, datatype: numberStr})
                         WITH * CALL apoc.merge.relationship(object, typeUriStr ,{name: typeNameStr},{name: typeNameStr},mp,{name: typeNameStr}) YIELD rel RETURN object
                     WITH *,  row.type as type_
                     WHERE type_ is not null and type_ = "http://www.w3.org/2001/XMLSchema#date"
                         CREATE(object:Property {value: row.object, type: timeStr, datatype: timeStr})
                          WITH * CALL apoc.merge.relationship(object, typeUriStr ,{name: typeNameStr},{name: typeNameStr},mp,{name: typeNameStr}) YIELD rel  RETURN object
                     WITH *,   row.predicate as predicate_ 
                     WHERE predicate_  = "http://xmlns.com/foaf/0.1/depiction"
                         SET subject.image = row.object
                     WITH *,   row.predicate  as predicate_
                     WHERE predicate_ = "http://xmlns.com/foaf/0.1/isPrimaryTopicOf"
                         SET subject.wikipedia_url = row.object
                     WITH *,   row.type as type_,  row.predicate  as predicate_
                     WHERE (type_ is null or (type_ != "http://www.w3.org/2001/XMLSchema#integer" and type_ != "http://www.w3.org/2001/XMLSchema#date"))
                     and (predicate_  != "http://xmlns.com/foaf/0.1/depiction" and predicate_ = "http://xmlns.com/foaf/0.1/isPrimaryTopicOf")
                         CREATE(object:Property {value: row.object, type: stringStr, datatype: stringStr})
                          WITH * CALL apoc.merge.relationship(object, typeUriStr ,{name: typeNameStr},{name: typeNameStr},mp,{name: typeNameStr}) YIELD rel RETURN object

                  WITH * CALL apoc.merge.relationship(subject,row.predicate,
                    {name: apoc.text.capitalize(replace(row.predicate,"http://dbpedia.org/property/","")), source: "dbpedia", type: "literal"}, 
                    {name: apoc.text.capitalize(replace(row.predicate,"http://dbpedia.org/property/","")), source: "dbpedia", type: "literal"},
                    object.object,
                    {name: apoc.text.capitalize(replace(row.predicate,"http://dbpedia.org/property/","")), source: "dbpedia", type: "literal"}) YIELD rel RETURN null',
                    {row: row, subject: subject, numberStr: numberStr, timeStr: timeStr, stringStr: stringStr, typeUriStr:typeUriStr, typeNameStr: typeNameStr}) YIELD value RETURN null